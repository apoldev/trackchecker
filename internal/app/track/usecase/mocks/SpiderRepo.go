// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	models "github.com/apoldev/trackchecker/internal/app/models"
	mock "github.com/stretchr/testify/mock"
)

// SpiderRepo is an autogenerated mock type for the SpiderRepo type
type SpiderRepo struct {
	mock.Mock
}

// FindSpidersByTrackingNumber provides a mock function with given fields: trackingNumber
func (_m *SpiderRepo) FindSpidersByTrackingNumber(trackingNumber string) []*models.Spider {
	ret := _m.Called(trackingNumber)

	if len(ret) == 0 {
		panic("no return value specified for FindSpidersByTrackingNumber")
	}

	var r0 []*models.Spider
	if rf, ok := ret.Get(0).(func(string) []*models.Spider); ok {
		r0 = rf(trackingNumber)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Spider)
		}
	}

	return r0
}

// NewSpiderRepo creates a new instance of SpiderRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSpiderRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *SpiderRepo {
	mock := &SpiderRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
