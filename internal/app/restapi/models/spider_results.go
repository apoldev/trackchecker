// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SpiderResults spider results
//
// swagger:model spiderResults
type SpiderResults struct {

	// error
	// Example: error message
	Error string `json:"error,omitempty"`

	// execute time
	// Example: 1.234
	ExecuteTime float64 `json:"execute_time,omitempty"`

	// result
	// Example: {"CountryFrom":"RU","CountryTo":"US","events":[{"date":"2021-01-01T00:00:00Z","place":"New York","status":"In Transit"}]}
	Result interface{} `json:"result,omitempty"`

	// spider
	// Example: usps
	Spider string `json:"spider,omitempty"`

	// tracking number
	// Example: 1234567890
	TrackingNumber string `json:"tracking_number,omitempty"`
}

// Validate validates this spider results
func (m *SpiderResults) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this spider results based on context it is used
func (m *SpiderResults) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SpiderResults) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SpiderResults) UnmarshalBinary(b []byte) error {
	var res SpiderResults
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
