// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/apoldev/trackchecker/internal/app/restapi/models"
)

// GetResultsOKCode is the HTTP code returned for type GetResultsOK
const GetResultsOKCode int = 200

/*
GetResultsOK tracking result is found

swagger:response getResultsOK
*/
type GetResultsOK struct {

	/*
	  In: Body
	*/
	Payload *models.TrackingResult `json:"body,omitempty"`
}

// NewGetResultsOK creates GetResultsOK with default headers values
func NewGetResultsOK() *GetResultsOK {

	return &GetResultsOK{}
}

// WithPayload adds the payload to the get results o k response
func (o *GetResultsOK) WithPayload(payload *models.TrackingResult) *GetResultsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get results o k response
func (o *GetResultsOK) SetPayload(payload *models.TrackingResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetResultsDefault error

swagger:response getResultsDefault
*/
type GetResultsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetResultsDefault creates GetResultsDefault with default headers values
func NewGetResultsDefault(code int) *GetResultsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetResultsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get results default response
func (o *GetResultsDefault) WithStatusCode(code int) *GetResultsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get results default response
func (o *GetResultsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get results default response
func (o *GetResultsDefault) WithPayload(payload *models.Error) *GetResultsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get results default response
func (o *GetResultsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
